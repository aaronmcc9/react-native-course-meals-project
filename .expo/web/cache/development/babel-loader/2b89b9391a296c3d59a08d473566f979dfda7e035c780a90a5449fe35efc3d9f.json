{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mccaar01\\\\OneDrive - Logibec Inc\\\\Documents\\\\Udemy\\\\React Native\\\\meals-project\\\\components\\\\CategoryGridTile.js\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryGridTile(_ref) {\n  var title = _ref.title,\n    color = _ref.color,\n    onPress = _ref.onPress;\n  return _jsxDEV(View, {\n    style: styles.gridItem,\n    children: _jsxDEV(Pressable, {\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.button, pressed ? styles.buttonPressed : null];\n      },\n      onPress: onPress,\n      children: _jsxDEV(View, {\n        style: [styles.innerContainer, {\n          backgroundColor: color\n        }],\n        children: _jsxDEV(Text, {\n          style: styles.title,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\nexport default CategoryGridTile;\nvar styles = StyleSheet.create({\n  gridItem: {\n    flex: 1,\n    margin: 16,\n    height: 150,\n    borderRadius: 8,\n    backgroundColor: 'white',\n    shadowColor: 'black',\n    shadowOpacity: 0.25,\n    shadowRadius: 8,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    overflow: Platform.OS === 'android' ? \"hidden\" : \"visible\"\n  },\n  button: {\n    flex: 1\n  },\n  buttonPressed: {\n    opacity: 0.5\n  },\n  innerContainer: {\n    flex: 1,\n    padding: 16,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 8\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["CategoryGridTile","_ref","title","color","onPress","_jsxDEV","View","style","styles","gridItem","children","Pressable","_ref2","pressed","button","buttonPressed","innerContainer","backgroundColor","Text","fileName","_jsxFileName","lineNumber","columnNumber","StyleSheet","create","flex","margin","height","borderRadius","shadowColor","shadowOpacity","shadowRadius","shadowOffset","width","overflow","Platform","OS","opacity","padding","justifyContent","alignItems","fontWeight","fontSize"],"sources":["C:/Users/mccaar01/OneDrive - Logibec Inc/Documents/Udemy/React Native/meals-project/components/CategoryGridTile.js"],"sourcesContent":["import { Pressable, View, Text, StyleSheet, Platform } from \"react-native\";\r\n\r\nfunction CategoryGridTile({ title, color, onPress }) {\r\n    return (\r\n        <View style={styles.gridItem}>\r\n            <Pressable style={({ pressed }) => [styles.button, pressed ? styles.buttonPressed : null]}\r\n                onPress={onPress}>\r\n                <View style={[styles.innerContainer, { backgroundColor: color }]}>\r\n                    <Text style={styles.title}>{title}</Text>\r\n                </View>\r\n            </Pressable>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default CategoryGridTile;\r\n\r\nconst styles = StyleSheet.create({\r\n    gridItem: {\r\n        flex: 1,\r\n        margin: 16,\r\n        height: 150,\r\n        borderRadius: 8,\r\n        backgroundColor: 'white',\r\n        shadowColor: 'black',\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 8,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        //to prevent ripple effect going outside borders on android\r\n        overflow: Platform.OS === 'android' ? \"hidden\" : \"visible\"\r\n    },\r\n    button: {\r\n        flex: 1\r\n    },\r\n    buttonPressed: {\r\n        opacity: 0.5\r\n    },\r\n    innerContainer: {\r\n        flex: 1,\r\n        padding: 16,\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        borderRadius: 8\r\n    },\r\n    title: {\r\n        fontWeight: 'bold',\r\n        fontSize: 18\r\n    }\r\n})"],"mappings":";;;;;;;AAEA,SAASA,gBAAgBA,CAAAC,IAAA,EAA4B;EAAA,IAAzBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EAC7C,OACIC,OAAA,CAACC,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,QAAS;IAAAC,QAAA,EACzBL,OAAA,CAACM,SAAS;MAACJ,KAAK,EAAE,SAAAA,MAAAK,KAAA;QAAA,IAAGC,OAAO,GAAAD,KAAA,CAAPC,OAAO;QAAA,OAAO,CAACL,MAAM,CAACM,MAAM,EAAED,OAAO,GAAGL,MAAM,CAACO,aAAa,GAAG,IAAI,CAAC;MAAA,CAAC;MACtFX,OAAO,EAAEA,OAAQ;MAAAM,QAAA,EACjBL,OAAA,CAACC,IAAI;QAACC,KAAK,EAAE,CAACC,MAAM,CAACQ,cAAc,EAAE;UAAEC,eAAe,EAAEd;QAAM,CAAC,CAAE;QAAAO,QAAA,EAC7DL,OAAA,CAACa,IAAI;UAACX,KAAK,EAAEC,MAAM,CAACN,KAAM;UAAAQ,QAAA,EAAER;QAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEf;AAEA,eAAetB,gBAAgB;AAE/B,IAAMQ,MAAM,GAAGe,UAAU,CAACC,MAAM,CAAC;EAC7Bf,QAAQ,EAAE;IACNgB,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,CAAC;IACfX,eAAe,EAAE,OAAO;IACxBY,WAAW,EAAE,OAAO;IACpBC,aAAa,EAAE,IAAI;IACnBC,YAAY,EAAE,CAAC;IACfC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEN,MAAM,EAAE;IAAE,CAAC;IAErCO,QAAQ,EAAEC,QAAQ,CAACC,EAAE,KAAK,SAAS,GAAG,QAAQ,GAAG;EACrD,CAAC;EACDtB,MAAM,EAAE;IACJW,IAAI,EAAE;EACV,CAAC;EACDV,aAAa,EAAE;IACXsB,OAAO,EAAE;EACb,CAAC;EACDrB,cAAc,EAAE;IACZS,IAAI,EAAE,CAAC;IACPa,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBZ,YAAY,EAAE;EAClB,CAAC;EACD1B,KAAK,EAAE;IACHuC,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;EACd;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}